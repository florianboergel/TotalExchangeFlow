# AUTOGENERATED! DO NOT EDIT! File to edit: 00_tef_core.ipynb (unless otherwise specified).

__all__ = ['constructorTEF', 'data_description']

# Cell
import math
import numpy as np
import xarray as xr
import time

# Cell

data_description = {
    "lon" : "xt_ocean",
    "lat" : "yt_ocean",
    "depth" : "st_ocean",
    "time" : "time"
}

class constructorTEF:

    def __init__(self, inputFile, data_description, **kwargs):
        if isinstance(inputFile, str):
            try:
                self._read(fileName=inputFile)
            except (OSError, IOError, RunetimeError):
                raise IOError("Could not read file.")
        elif isinstance(inputFile, xr.Dataset):
            self.ds = inputFile
        elif isinstance(inputFile, xr.DataArray):
            self.ds = inputFile
        else:
            raise IOError("Please provide xarray Dataset/DataArray or netcdf-filepath")

        self._setup(data=data_description)

        self.transport = None
        self.tracer = None

    def _read(self, fileName, **kwargs):
        self.ds = xr.open_dataset(filename, use_cftime=True, **kwargs)

    def _setup(self, data):

        for dimension in data.keys():
            if data[dimension] is None:
                self.ds = self.ds.expand_dims(dimension)
            else:
                self.ds = self.ds.rename({data[dimension]: dimension})

        self.ds = self.ds.transpose("time",
                                    "depth",
                                    "lat",
                                    "lon")